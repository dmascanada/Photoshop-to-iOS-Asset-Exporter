/*    Photoshop Layer Renamer        LICENSE AGREEMENT        This program is free software: you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation, either version 3 of the License, or    (at your option) any later version.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with this program.  If not, see <http://www.gnu.org/licenses/>.        DMASCanada Inc. © 2014 - 2017         */var originalRulerUnits = preferences.rulerUnits;preferences.rulerUnits = Units.PIXELS;var docRef = activeDocument;var docWidth = docRef.width.value;var docHeight = docRef.height.value;var mySourceFilePath = activeDocument.fullName.path + "/";var doc = activeDocument;var oldPath = activeDocument.path;var assetScale = 1;//set in Main Asset_Exporter Scriptvar buttonState = "normal";//highlighted, selected, disabledvar currentContainer = "self";//self.viewvar currentLayerComp = "";//self.viewvar BTN = "btn";//set in Main Asset_Exporter Scriptvar IMG = "img";//set in Main Asset_Exporter Scriptvar TXT_LABEL = "txtlbl";//set in Main Asset_Exporter Scriptvar TXT_HTML = "txtweb";//set in Main Asset_Exporter Scriptvar TXT_BTN = "txtbtn";//set in Main Asset_Exporter Scriptvar CONTAINER = "vw";//set in Main Asset_Exporter Scriptvar SCROLLER = "scrl";//set in Main Asset_Exporter Scriptvar BOUNDS_DEF = "bdef";//set in Main Asset_Exporter Scriptvar STATE_NORMAL = "normal";//set in Main Asset_Exporter Scriptvar STATE_HIGHLIGHTED = "highlighted";//set in Main Asset_Exporter Scriptvar STATE_SELECTED = "selected";//set in Main Asset_Exporter Scriptvar STATE_DISABLED = "disabled";//set in Main Asset_Exporter Scriptvar saveToSubFolder = true;//set in Main Asset_Exporter Scriptvar shouldSaveoutImages = true;//set in Main Asset_Exporter Scriptvar exportRetinaAssets = true;//set in Main Asset_Exporter Scriptvar txtAssetWidthPadding=0;//set in Main Asset_Exporter Scriptvar txtAssetHeightPadding=0;//set in Main Asset_Exporter Scriptvar stackorder = 0;function docCheck() {    // ensure that there is at least one document open    if (!documents.length)     {        alert('There are no documents open.');        return; // quit    }}cTID = function(s) {     return app.charIDToTypeID(s);  };sTID = function(s) {     return app.stringIDToTypeID(s);  };function getLayerDescriptor (doc, layer) {    var ref = new ActionReference();    ref.putEnumerated(cTID("Lyr "), cTID("Ordn"), cTID("Trgt"));    return executeActionGet(ref)};function getLayerID(doc, layer) {      var d = getLayerDescriptor(doc, layer);      return d.getInteger(cTID('LyrI'));};function dupLayers() {         var desc143 = new ActionDescriptor();        var ref73 = new ActionReference();        ref73.putClass( charIDToTypeID('Dcmn') );        desc143.putReference( charIDToTypeID('null'), ref73 );        desc143.putString( charIDToTypeID('Nm  '), activeDocument.activeLayer.name );        var ref74 = new ActionReference();        ref74.putEnumerated( charIDToTypeID('Lyr '), charIDToTypeID('Ordn'), charIDToTypeID('Trgt') );        desc143.putReference( charIDToTypeID('Usng'), ref74 );                executeAction( charIDToTypeID('Mk  '), desc143, DialogModes.NO );};function SavePNG(saveFile){        var saveOptions = new ExportOptionsSaveForWeb;         saveOptions.format = SaveDocumentType.PNG        saveOptions.PNG8 = false;         saveOptions.transparency = true;         saveOptions.interlaced = false;         saveOptions.quality = 100;        activeDocument.exportDocument(new File(saveFile),ExportType.SAVEFORWEB,saveOptions); };function SaveJPEG(saveFile){        var saveOptions = new ExportOptionsSaveForWeb;         saveOptions.includeProfile = true;         saveOptions.optimised = true;         saveOptions.format = SaveDocumentType.JPEG;         saveOptions.quality = 50;        activeDocument.exportDocument(new File(saveFile),ExportType.SAVEFORWEB,saveOptions); };// class using a contructorfunction cLayer(doc, layer) {    this.layerID = getLayerID(doc, layer);    this.layerWidth = layer.bounds[2].value - layer.bounds[0].value;    this.layerHeight = layer.bounds[3].value - layer.bounds[1].value;    this.upperLeftX = layer.bounds[0].value;    this.upperLeftY = layer.bounds[1].value;        this.centerX = this.upperLeftX + this.layerWidth/2;    this.centerY = this.upperLeftY + this.layerHeight/2;    return this;};function stringToAscii(s){  var ascii="";  if(s.length>0)    for(i=0; i<s.length; i++)    {      var c = ""+s.charCodeAt(i);      while(c.length < 3)       c = "0"+c;      ascii += c;    }  return(ascii);};function formatName(str){        var hasFound = false;    var _layerName = str;        _layerName = _layerName.replace(/[\s-.]/g, "");    _layerName = _layerName.replace(/\s*/g, "");     if(_layerName.indexOf(IMG) ==0) _layerName = _layerName.replace(IMG, "");     if(_layerName.indexOf(BTN) ==0) _layerName = _layerName.replace(BTN, "");     if(_layerName.indexOf(TXT_LABEL) ==0) _layerName = _layerName.replace(TXT_LABEL, "");     if(_layerName.indexOf(CONTAINER) ==0) _layerName = _layerName.replace(CONTAINER, "");      if(_layerName.indexOf("_jpg_") == 0) _layerName = _layerName.replace("_jpg_", "");     if(_layerName.indexOf("_") ==0) _layerName = _layerName.replace("_", "");         return _layerName;};function saveCodeFiles(filepath, contentString, encoding) {        var csvFile1 = new File(filepath);    csvFile1.encoding = encoding;    csvFile1.open('w');    csvFile1.writeln(contentString);    csvFile1.close();};function getFillColor() {        var ref = new ActionReference();    ref.putEnumerated( stringIDToTypeID( "contentLayer" ), charIDToTypeID( "Ordn" ), charIDToTypeID( "Trgt" ));    var ref1= executeActionGet( ref );    var list =  ref1.getList( charIDToTypeID( "Adjs" ) ) ;    var solidColorLayer = list.getObjectValue(0);            var color = solidColorLayer.getObjectValue(charIDToTypeID('Clr '));     var fillcolor = new SolidColor;    fillcolor.rgb.red = color.getDouble(charIDToTypeID('Rd  '));    fillcolor.rgb.green = color.getDouble(charIDToTypeID('Grn '));    fillcolor.rgb.blue = color.getDouble(charIDToTypeID('Bl  '));    return fillcolor;    };function selectLayerBelow( add ){        var desc = new ActionDescriptor();        var ref = new ActionReference();        ref.putEnumerated( charIDToTypeID( "Lyr " ), charIDToTypeID( "Ordn" ), charIDToTypeID( "Bckw" ) );    desc.putReference( charIDToTypeID( "null" ), ref );    if(add!=undefined && add = true )desc.putEnumerated( stringIDToTypeID('selectionModifier'), stringIDToTypeID('selectionModifierType'), stringIDToTypeID('addToSelectionContinuous') );    desc.putBoolean( charIDToTypeID( "MkVs" ), false );    executeAction( charIDToTypeID( "slct" ), desc, DialogModes.NO );    };function resizeActivePictureAndScaleStyles(newWidth){   var idImgS = charIDToTypeID( "ImgS" );      var desc2 = new ActionDescriptor();      var idWdth = charIDToTypeID( "Wdth" );      var idPxl = charIDToTypeID( "#Pxl" );      desc2.putUnitDouble( idWdth, idPxl, newWidth);      var idscaleStyles = stringIDToTypeID( "scaleStyles" );      desc2.putBoolean( idscaleStyles, true );      var idCnsP = charIDToTypeID( "CnsP" );      desc2.putBoolean( idCnsP, true );      var idIntr = charIDToTypeID( "Intr" );      var idIntp = charIDToTypeID( "Intp" );      var idBcbc = charIDToTypeID( "Bcbc" );      desc2.putEnumerated( idIntr, idIntp, idBcbc );   executeAction( idImgS, desc2, DialogModes.NO );};